{/* <Col>
<div class="card" style={{width: "18rem"}}>
    <img class="card-img-top" src="https://images.unsplash.com/photo-1469259943454-aa100abba749?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=934&q=80" />
    <div class="card-body">
        <h5 class="card-title">Purple</h5>
        <p class="card-text">Best Wedding gift</p>
        <a href="#" class="btn btn-primary">Go somewhere</a>
</div>
</div>
</Col>
<Col>
<div class="card" style={{width: "18rem"}}>
    <img class="card-img-top" src="https://images.unsplash.com/photo-1468327768560-75b778cbb551?ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=934&q=80" alt="Card image cap" />
    <div class="card-body">
        <h5 class="card-title">Purple</h5>
        <p class="card-text">Best Wedding gift</p>
        <a href="#" class="btn btn-primary">Go somewhere</a>
</div>
</div>
</Col>

<Col>
<div class="card" style={{width: "18rem"}}>
    <img class="card-img-top" src="https://images.unsplash.com/photo-1457089328109-e5d9bd499191?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=913&q=80" />
    <div class="card-body">
        <h5 class="card-title">Purple</h5>
        <p class="card-text">Best Wedding gift</p>
        <a href="#" class="btn btn-primary">Go somewhere</a>
</div>
</div>
</Col>
<Col>
<div class="card" style={{width: "18rem"}}>
    <img class="card-img-top" src="https://images.unsplash.com/photo-1476994230281-1448088947db?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=934&q=80" />
    <div class="card-body">
        <h5 class="card-title">Purple</h5>
        <p class="card-text">Best Wedding gift</p>
        <a href="" class="btn btn-primary">Show individual Image</a>
        

</div>
</div>
</Col> */}



{/* <Form className="mt-5 mx-1">
<Row className="align-items-center">
    <Col xs="auto">
        <Form.Label htmlFor="inlineFormInput" visuallyHidden>
            Name
        </Form.Label>
        <Form.Control
            className="mb-2"
            id="inlineFormInput"
            placeholder="Jane Doe"
        />
    </Col>
    
    <Col xs="auto">
        <Form.Label htmlFor="inlineFormInputGroup" visuallyHidden>
            Username
        </Form.Label>
        
        <InputGroup className="mb-2">
            <InputGroup.Text>@</InputGroup.Text>
            <FormControl id="inlineFormInputGroup" placeholder="Username" />
        </InputGroup>
    </Col>
    
    <Col xs="auto">
    <Form.Check
        type="checkbox"
        id="autoSizingCheck"
        className="mb-2"
        label="Remember me"
    />
    </Col>
    <Col xs="auto">
    <Button type="submit" className="mb-2">
        Submit
    </Button>
    </Col>
</Row>
</Form> */}



{/* <div className="App"> */}
        {/* <Router>
        <Navbar />
        <Switch>
        
          <Route exact path="/login" component={Auth} />
          <Route exact path="/signup" component={RegisterUserForm} />
          <Route exact path="/addStore" component={AddStore} /> */}
          {/* <Route exact path="/addStore" component={null} /> */}


          {/* <Route exact path="/summerflowers"> <MainContainer/> </Route>
          <Route exact path="/wedding"> <MainContainer/> </Route>
          <Route exact path="/occasions"> <MainContainer/> </Route>
          <Route exact path="/" component={MainContainer}/> */}
          {/* <Route exact path="/flower"> <Flower/> </Route> */}

          {/* <Route exact path="/flower/:id" render={(props) =>  {
            let flowerId = props.match.params.id
            const currentFlower = flowers.find(x => x.id == parseInt(flowerId))
            console.log("this is the current flower we're sending: " , currentFlower)
            return <Flower currentFlower={currentFlower}/>
              }
            }
          /> */}
          {/* <Route path='/flowers/:id' component={Flower} />
          <Route path='/user/:id' component={Dashboard} />
          <Route path='/order/:id' component={OrderFlower} />

        </Switch>
        
      </Router> */}
    {/* </div> */}


        // let user_id;
    // if (JSON.parse(localStorage.getItem('user_json'))!== null) {
    //     user_id = JSON.parse(localStorage.getItem('user_json')).user.id       
    // } 

    // async function signOut() {
    //     // fetch("http://127.0.0.1:3000/logout", {method: 'DELETE'}).then(r => r.json()).then(data => {
    //     //     console.log(data, "from signout")
    //     //     localStorage.clear()
    //     // })

    //     // debugger
    //     const res = await fetch("http://127.0.0.1:3000/logout", { method: "DELETE" })
    //       debugger
    //       if (res.ok){
    //           localStorage.clear()
    //         //   history.push("/")
    //       }
    // }


     <h1>Welcome to your page.</h1>
            <h2>{userData.user.email}</h2>
            {/* {<img src={userData.user.store.image_url} /> */}
            <p>{userData.user.store.zipcode}</p>
            <p>{userData.user.store.user_id}</p>
            <p>{userData.user.store.address}</p>
            <p>{userData.user.store.total}</p>